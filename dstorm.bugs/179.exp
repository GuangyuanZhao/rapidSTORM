start_test_suite
load_default_config

set timeout 30

set_input_file "${workspace_target}Mikrotubuli.sif"
send "in Car in Input in Optics in InputLayer0 in PixelSizeInNM value set 105.0,105.0\n"
send "in Car in Input in OutputBasename set Basename value set ${tmpdir_target}179\n"
set_last_image 50
send "in Car in Output in EngineOutput in Output3 in Cache in Output0 in Expression in ChooseTransmission in value set Table\n"
send "in Car in Output in EngineOutput in ToRemove in value set Output0\n"
dstorm_attach
send "in Car in Run in value set 1\n"

set drift_in_pm 10000.0
set job [get_job_number]

set test "Job for bug #179 can be computed"
expect {
    -re "in Progress in value set 0.1" { 
        send "in $job in Output2 set LowerAmplitudeThreshold value set 5000.0\n"; 
        send "in $job in Output2 set LinearDriftCorrection value set $drift_in_pm,$drift_in_pm,0.0\n"; 
        exp_continue;
    }
    -re "in Progress in value set 1" { pass "$test"; }
    -re "in Progress in value set \[0-9.\]*\r\n" { exp_continue; }
}

set drift [expr $drift_in_pm / 1000.0]
set test "Bug #179 is fixed"
spawn cat "${tmpdir_host}179.txt"
expect {
    -re "\n(\[0-9.\]+\) (\[0-9.\]+) (\[0-9\]+) (\[0-9.Ee+-\]+) (\[0-9.Ee+-\]+)" { 
        set x $expect_out(1,string)
        set y $expect_out(2,string)
        set t $expect_out(3,string)
        set a $expect_out(4,string)
        if { [expr $x >= $drift * $t && $y >= $drift * $t && $a >= 5000.0] } {
            exp_continue
        } else {
            puts "Parsed $x $y $t $a"
            fail "$test"
        }
    }
    eof { pass "$test"; }
}

global dstorm_spawn_id
global spawn_id
set spawn_id $dstorm_spawn_id

end_test_suite

