if { [info exists env(RUN_PERFORMANCE_TESTS)] == 1 } {
    start_test_suite
    load_default_config

    send "in Car in Input in BiplaneSplitter set DualView value set Horizontally\n"
    send "in Car in Input in Optics set PSF value set 300.0,300.0\n"
    send "in Car in Input in Optics in InputLayer0 set PixelSizeInNM value set 104.0,104.0\n"
    send "in Car in Input in MultiChannel in Channels in Channel1 set InputMethod in FileMethod set FileType value set TIFF\n"
    send "in Car in Input in MultiChannel in Channels in Channel1 set InputMethod in FileMethod set FileType in TIFF set DetermineFileLength value set true\n"
    send "in Car in Input in MultiChannel in Channels in Channel1 set InputMethod in FileMethod set InputFile value set ${testcase_target}/2-20110413_20110407_MT-Al647-700_adjratio_300mM-MEA_Dich710_UV_0.tif\n"
    send "in Car in Input in OutputBasename set Basename value set ${tmpdir_target}139\n"
    send "in Car in Input in Optics in InputLayer0 set Transmission0 value set 4.0\n"
    send "in Car in Input in Optics in InputLayer1 set DarkCurrent value set 140\n"
    send "in Car set Engine in rapidSTORM set SpotFindingMethod value set Median\n"
    send "in Car set Engine in rapidSTORM set SpotFittingMethod in GUF set OutputSigmas value set false\n"
    send "in Car set Engine in rapidSTORM set SpotFittingMethod in GUF set TwoKernelFitting value set false\n"
    send "in Car set Engine in rapidSTORM set SpotFittingMethod in GUF set LaempiPosition value set true\n"
    send "in Car in Output in EngineOutput in Output2 in Cache in Output0 in Expression in Output0 in Image set ColourScheme value set ByCoordinate\n"
    send "in Car in Output in EngineOutput in Output2 in Cache in Output0 in Expression in Output0 in Image set ColourScheme in ByCoordinate set HueCoordinate value set ImageNumber\n"
    send "in Car in Output in EngineOutput in Output2 in Cache in Output0 in Expression in Output0 in Image set ColourScheme in ByCoordinate set HueRange value set 0.666\n"
    set_last_image 1000
    dstorm_attach
    send "in Car set Run value set 1\n"

    set job [get_job_number]

    set test "Bug #139 is fixed"
    expect {
        -re "in Progress in value set 1" { pass "$test"; }
        -re "in LocalizationCount in value set" { exp_continue; }
        -re "in Progress in value set" { exp_continue; }
        -re "in EngineStatus in TIFF in EntryCount in value set" { exp_continue; }
    }

    end_test_suite
}
