begin_test_suite
clear_tmp_dir
load_default_config
dstorm_attach

send "in Car in AutoTerminate in value set true\n"

set test "Can compute file normally"
set input_file "Mikrotubuli.sif"
set normal_prefix "unmirrored"
set mirror_prefix "mirrored"
set_input_file "$workspace_target$input_file"
send "in Car in Input in OutputBasename in Basename in value set $tmpdir_target$normal_prefix\n"
set_last_image 300
send "in Car in Output in EngineOutput in Output2 in Cache in Output0 in Expression in Output0 in Image in SaveWithKey in value set false\n"
send "in Car in Output in EngineOutput in Output2 in Cache in Output0 in Expression in Output0 in Image in SaveScaleBar in value set false\n"
send "in Car in Run in value set 1\n"

set test "Can compute file mirrored"
send "in Car in Input in OutputBasename in Basename in value set $tmpdir_target$mirror_prefix\n"
send "in Car in Input in MultiChannel in Channels in Channel1 in Mirror in MirrorY in value set true\n"
send "in Car in Run in value set 1\n"

wait_for_image "$tmpdir_target$mirror_prefix.png" "$test"

set test "Mirrored job produced expected output file"
pass_if [file exists "$tmpdir_host$mirror_prefix.png"] "$test"

set unmirror_prefix "remirrored"
exec convert "$tmpdir_host$mirror_prefix.png" "-flip" "$tmpdir_host$unmirror_prefix.png"
if { [catch {exec compare "-metric" "RMSE" "$tmpdir_host$normal_prefix.png" "$tmpdir_host$unmirror_prefix.png" "/dev/null"} msg] } {
    set rmse_error [string range $msg 0 [string first $msg " "]]
    if { $rmse_error <= 5000 } { pass "$test"; } else {
        puts "RMSE is $rmse_error";
        fail "$test"; 
    }
} else {
    fail "$test";
}

end_test_suite
