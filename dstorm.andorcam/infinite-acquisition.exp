global may_use_camera

if { $may_use_camera == 1 } {
begin_test_suite
global have_test_plugin
global andorcam_spawn_id
global dstorm_spawn_id

set acd $andorcam_spawn_id
set dcd $dstorm_spawn_id
send "in Car in AutoTerminate in value set false\n"
set timeout 20

set basename can-compute-cam-job-test
set basepath $tmpdir_host$basename

dstorm_attach

set first_camera "in Camera0"

send "in Car in Input in MultiChannel in Channels in Channel1 in InputMethod in value set AndorDirectConfig\n"
send -i $acd "$first_camera in Initialization in Temperature in ReferenceTemperature in value set -30\n"
send -i $acd "$first_camera in Initialization in Temperature in TargetTemperature in value set -20\n"
send -i $acd "$first_camera in Readout in ImageReadout in BottomCaptureBorder in value set 180\n"
send -i $acd "$first_camera in Readout in ImageReadout in LeftCaptureBorder in value set 6\n"
send -i $acd "$first_camera in Readout in ImageReadout in RightCaptureBorder in value set 113\n"
send -i $acd "$first_camera in Readout in ImageReadout in TopCaptureBorder in value set 4\n"
send "in Car in Input in OutputBasename in Basename in value set $tmpdir_target$basename\n"

if { $have_test_plugin == 1 } {
    send "in Car in Output in EngineOutput in ChooseTransmission in value set Verbose\n"
}
send "in Car in Output in EngineOutput in ChooseTransmission in value set Count\n"
send "in Car in Output in EngineOutput in ChooseTransmission in value set Progress\n"
# TODO: send "$first_camera_base in AcquisitionSpeed in value set 0.001\n"
# TODO: send "$first_camera_base in AcquisitionLength in value set 20\n"
send -i $acd "$first_camera in Timings in AcquisitionMode in SelectAcquisitionMode in value set RunTillAbort\n"

send "in Car in Run in value set 1\n"
set job [get_job_number]

set test "Job reports progress"
expect {
    -i $acd -re "in ActualTemperature in value" { exp_continue; }
    -i $dcd -re "in Progress in value set 0.5\r*\n"
        { pass "$test"; }
    -i $dcd -re "critical error in programming raised the signal for segmentation fault" 
        { fail "$test"; exit 1; }
}

set test "Job runs past image 20"
if { $have_test_plugin == 1 } {
    expect {
        -re "in LocalizationCount in value set" { exp_continue }
        -re "Verbose plugin got \[0-9\]* localizations for (\[0-9\]*) fr" {
            if { $expect_out(1,string) > 21 } { pass "$test" } else { exp_continue }
        }
        -re "remove dStormJob" { fail "$test" }
    }
} else {
    unsupported "$test"
}

set test "Stopping the job disconnects from the camera"
send "in $job in StopComputation in value set 1\n"
expect {
    -i $acd -re "in Initialization in NumericState in value set 2" { pass "$test" }
}

set test "Job is closed after clicking close job"
send "in $job in CloseJob in value set 1\n"
set close_button_pressed 0
expect {
    -i $dcd -re "in $job in CloseJob in value set 1" 
        { set close_button_pressed 1; exp_continue; }
    -i $dcd -re "remove $job" {
        if { $close_button_pressed == 1 } {
            pass "$test"
        } else {
            fail "$test"
        }
    }
}

end_test_suite
} else {
unsupported "Job reports progress"
unsupported "Job runs past image 20"
unsupported "Job is declared finished when engine is stopped"
unsupported "Camera disconnects"
unsupported "Job is closed after clicking close job"
}
