set timeout 5

# send "attach\n"
set test "basename printer works"
send "cmd 0 forSet Car forSet Method set InputMethod value AndorDirectConfig\n"
expect {
    -re "ack 0" { pass "$test" }
    timeout     { fail "$test" }
}
send "in Car in Method set InputMethod in AndorDirectConfig in CamControl in Initialization in Temperature set ReferenceTemperature = 20\n"
send "in Car in Method set InputMethod in AndorDirectConfig in CamControl in Initialization in Temperature set TargetTemperature = 30\n"
send "in Car in Method set InputMethod in AndorDirectConfig set ShowLiveByDefault = false\n"

set timeout 10
send "forSet Car forSet Method in InputMethod in AndorDirectConfig set AcquisitionLength = 1\n"
send "forSet Car forSet Output in EngineOutput set ChooseTransmission = BasenamePrinter\n"
send "forSet Car forSet Output in EngineOutput set ChooseTransmission = Verbose\n"
expect {
    -re "Displaying output file name .*.foo"        { pass "$test" }
    timeout { fail "$test" }
}

set test "camera job basename display"
send "in Car in Method in InputMethod in AndorDirectConfig set OutputBasename = Job_\$run\$\n"
expect {
    -re "Displaying output file name .*.foo"        { pass "$test" }
    -re "Displaying output file name  "        { fail "$test" }
    -re "Output file basename is "        { fail "$test" }
    timeout { fail "$test" }
}

set test "camera job increment #1"
set current_job 0
send "in Car set Run = 1\n"
expect {
    -re "Output file basename is Job_(\[0-9\]*).foo"       
	{ pass "$test"; set current_job $expect_out(1,string) }
    -re "Output file basename is .*.foo"        { fail "$test" }
    timeout { fail "$test" }
}
set current_job [expr $current_job+1]
set timeout 30
expect {
    -re "Destroyed verbose plugin" {}
    timeout { fail "$test" }
}
set timeout 10

foreach {i} {2 3 4} {
    set test "camera job increment #$i"
    send "in Car set Run = 1\n"
    expect {
	-re "Output file basename is Job_[format %02i $current_job].foo"        { pass "$test" }
	-re "Output file basename is .*.foo"        { fail "$test" }
	timeout { fail "$test" }
    }
    set current_job [expr $current_job+1]
    set timeout 30
    set test "camera job destruction #$i"
    expect {
	-re "Destroyed verbose plugin" { pass "$test" }
	timeout { fail "$test" }
    }
    set timeout 10
}

wait_for_jobs

set test "basename switch"

send "forSet Car forSet Method set InputMethod in DummyInput set Number = 1\n"
send "cmd 0 forSet Car forSet Method set InputMethod value Auto\n"
expect {
    -re "Displaying output file name .foo" { exp_continue }
    -re "Displaying output file name .*.foo" { fail "$test" }
    -re "ack 0" { pass "$test" }
}

set test "sif file basename"

send "forSet Car forSet Method in InputMethod in Auto set InputFile = bar.sif\n"
expect {
    -re "Displaying output file name bar.foo" { pass "$test" }
    -re "Displaying output file name .*.foo" { fail "$test" }
    timeout { fail "$test" }
}

set test "stm file basename"

send "forSet Car forSet Method in InputMethod in Auto set InputFile = baz.stm\n"
expect {
    -re "Displaying output file name baz.foo" { pass "$test" }
    -re "Displaying output file name .*.foo" { fail "$test" }
    timeout { fail "$test" }
}

set test "name in run"

send "in Car set Run = 1\n"
expect {
    -re "Output file basename is baz.foo" { pass "$test" }
    -re "Output file basename is .*.foo"  { fail "$test" }
    -re "Job 04 failed" { fail "$test" }
    timeout { fail "$test" }
}

set test "basename backswitch #1"

send "forSet Car forSet Method set InputMethod value AndorDirectConfig\n"
expect {
    -re "Displaying output file name Job_" { pass "$test" }
    timeout { fail "$test" }
}

set test "basename backswitch #2"
send "in Car set Run = 1\n"
expect {
    -re "Output file basename is Job_" { pass "$test" }
    timeout { fail "$test" }
}

# send "detach\n"
send "cmd 0 wait_for_jobs\n"
expect -re "ack 0"
