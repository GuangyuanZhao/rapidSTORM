global have_test_plugin
begin_test_suite
load_default_config
send "in Car in AutoTerminate in value set true\n"

set basename can-compute-cam-job-test
set basepath $tmpdir_host$basename

send "in Car in Method in InputMethod in value set AndorDirectConfig\n"
send "in Car in Method in InputMethod in AndorDirectConfig in PixelSizeInNM in value set 100\n"
send "in Car in Method in InputMethod in AndorDirectConfig in CamControl in Initialization in Temperature in ReferenceTemperature in value set -30\n"
send "in Car in Method in InputMethod in AndorDirectConfig in CamControl in Initialization in Temperature in TargetTemperature in value set -20\n"
send "in Car in Method in InputMethod in AndorDirectConfig in CamControl in Readout in ImageReadout in BottomCaptureBorder in value set 180\n"
send "in Car in Method in InputMethod in AndorDirectConfig in CamControl in Readout in ImageReadout in LeftCaptureBorder in value set 6\n"
send "in Car in Method in InputMethod in AndorDirectConfig in CamControl in Readout in ImageReadout in RightCaptureBorder in value set 113\n"
send "in Car in Method in InputMethod in AndorDirectConfig in CamControl in Readout in ImageReadout in TopCaptureBorder in value set 4\n"

dstorm_attach

set timeout 2
set test "Basename is set in Andor config"
send "in Car in Method set InputMethod in AndorDirectConfig set OutputBasename value set $tmpdir_target$basename\n"
expect {
    -re "OutputBasename in value set (\[^\r\]*)\r*\n" {
        if { [string compare $expect_out(1,string) $tmpdir_target$basename] == 0 } { pass "$test"; } else { fail "$test"; } 
    }
}

set timeout 20
send "in Car in Output in EngineOutput set ChooseTransmission value set RawImage\n"
send "in Car in Output in EngineOutput set ChooseTransmission value set Count\n"
send "in Car in Method in InputMethod in AndorDirectConfig in AcquisitionSpeed in value set 0.001\n"

foreach imnum [list 20 502] {

send "in Car in Method in InputMethod in AndorDirectConfig in AcquisitionLength value set $imnum\n"
send "in Car in Run in value set 1\n"

set test "Camera presence is declared before camera is cooled completely for imnum $imnum"
expect {
    -re "in dStormJob\[0-9\]* declare Set\r*\nname AndorDirect" { pass "$test" }
    -re "in Initialization in NumericState in value set 5" { fail "$test" }
}

set test "Window pixel size is correct"
if { $have_test_plugin == 1 } {
    expect { 
        -re "Sizing display.*to 10\[0-9\] px.*and pixel size (\[0-9.+-eE\]*) px m" { 
            set size $expect_out(1,string);
            pass_if [ expr ! ( $size >= 0.9E7 && $size <= 1.1E7 ) ] "$test" 
        }
    }
} else {
    unsupported "$test"
}
set test "Image window pixel size is correct"
if { $have_test_plugin == 1 } {
    expect { 
        -re "Sizing display.*to 10\[0-9\]\[0-9\] px.*and pixel size (\[0-9.+-eE\]*) px m" { 
            set size $expect_out(1,string);
            pass_if [ expr ! ( $size >= 0.9E8 && $size <= 1.1E8 ) ] "$test" 
        }
    }
} else {
    unsupported "$test"
}

set test "Job is finished for imnum $imnum"
set seen_progress 0
expect {
    -re "in Progress in value set 0\.\[0-9\]*" { set seen_progress 1; exp_continue }
    -re "in LocalizationCount in value set" { exp_continue }
    -re "remove dStormJob" { pass "$test" }
    -re "\nChanging window " { exp_continue }
}

set test "Have seen progress for imnum $imnum"
if { $seen_progress == 1 } { pass "$test" } else { fail $test }

wait_for_jobs

set have_file 0
set test "TIFF file exists for imnum $imnum"
if { [file exists "$basepath.tif"] == 1 } {
    set have_file 1
    pass "$test"
} else {
    fail "$test"
}
set test "TIFF file has all subimages for imnum $imnum"
if { $have_file == 1 } {
    if { [exec identify -ping "$basepath.tif" | wc -l] == $imnum } {
        pass "$test"
        file delete "$basepath.tif"
    } else {
        fail "$test"
    }
} else {
        fail "$test"
}
set test "JPEG image exists for imnum $imnum"
if { [file exists "$basepath.jpg"] == 1 } {
    pass "$test"
    file delete "$basepath.jpg"
} else {
    fail "$test"
}

}

end_test_suite
