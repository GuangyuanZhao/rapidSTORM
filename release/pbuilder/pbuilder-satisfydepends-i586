#!/bin/bash
#   pbuilder -- personal Debian package builder
#   Copyright (C) 2001,2002,2003,2005-2007 Junichi Uekawa
#   Copyright (C) 2007 LoÃ¯c Minier
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
#
# module to satisfy build dependencies; aptitude flavor

set -e

export PBUILDER_PKGLIBDIR="${PBUILDER_PKGLIBDIR:-$PBUILDER_ROOT/usr/lib/pbuilder}"

. "$PBUILDER_PKGLIBDIR"/pbuilder-satisfydepends-funcs


# filter out dependencies sent on input not for this arch; deps can have
# multiple lines; output is on a single line or "" if empty
function filter_arch_deps() {
    local arch="$1"
    local INSTALLPKGMULTI
    local INSTALLPKG

    # split on ","
    {
        sed 's/[[:space:]]*,[[:space:]]*/\n/g' |
        while read INSTALLPKGMULTI; do
            echo "$INSTALLPKGMULTI" |
                # split on "|"
                sed 's/[[:space:]]*|[[:space:]]*/\n/g' |
                while read INSTALLPKG; do
                    #verbose=yes
                    if test -n "$CROSSARCH" -a -n "$INSTALLPKG"; then
                        test -z "$verbose" || echo "Trying to find out whether $INSTALLPKG needs cross-compilation" 1>&2
                        NEEDCROSS=no
                        REALPKG=`echo "$INSTALLPKG" | sed -e 's/^\([a-z0-9+-.]*\).*/\1/'`
                        if echo "$REALPKG" | grep -q '^libtool'; then 
                            # Blacklist libtool
                            test -z "$verbose" || echo "$REALPKG is named like a lib" 1>&2
                            NEEDCROSS=no
                        elif echo "$REALPKG" | grep -q '^lib'; then 
                            test -z "$verbose" || echo "$REALPKG is named like a lib" 1>&2
                            NEEDCROSS=yes
                        fi
                        if false; then
                            if ! aptitude show "$REALPKG" >/dev/null 2>&1; then
                                test -z "$verbose" || echo "Did not find $REALPKG" 1>&2
                                NEEDCROSS=yes
                            else
                                while aptitude show "$REALPKG" 2>/dev/null | grep -q '^State: not a real package$'; do
                                    test -z "$verbose" || echo "Resolving $REALPKG" 1>&2
                                    REALPKG=`aptitude show "$REALPKG" \
                                        | sed -n -e 's/Provided by: \([^,]*\).*/\1/p'`;
                                done
                                if ! aptitude show "$REALPKG" >/dev/null 2>&1; then
                                    test -z "$verbose" || echo "Did not find $REALPKG" 1>&2
                                    NEEDCROSS=yes
                                elif apt-cache show "$REALPKG" | egrep -q '^Architecture: all'; then
                                    test -z "$verbose" || echo "$REALPKG is arch-independent" 1>&2
                                    NEEDCROSS=no
                                elif apt-cache show "$REALPKG" | egrep -q '^Section: (.*/)?(libdevel|libs|debug)$'; then
                                    test -z "$verbose" || echo "$REALPKG is library" 1>&2
                                    NEEDCROSS=yes
                                else
                                    test -z "$verbose" || echo "$REALPKG is devel package" 1>&2
                                    NEEDCROSS=no
                                fi
                            fi
                        fi
                        if test "$NEEDCROSS" = "yes"; then
                            INSTALLPKG=`echo $INSTALLPKG | sed -e "s/^[^( ]*/&-$CROSSARCH-cross/"`
                        fi
                        test -z "$verbose" || echo "INSTALLPKG is now $INSTALLPKG" 1>&2
                    fi
                    if echo "$INSTALLPKG" | grep -q '\['; then
                        if checkbuilddep_archdeps "$INSTALLPKG" "$ARCH"; then
                            continue
                        fi
                    fi
                    # output the selected package
                    echo "$INSTALLPKG"
                done |
                # remove the arch list and add " | " between entries
                sed 's/\[.*\]//; $,$! s/$/ |/' |
                xargs --no-run-if-empty
        done;
    } |
    # add ", " between entries
    sed '$,$! s/$/,/' |
    xargs --no-run-if-empty
}

function checkbuilddep_internal () {
# Use this function to fulfill the dependency (almost)
    local ARCH=$($CHROOTEXEC dpkg-architecture -qDEB_HOST_ARCH)
    local BUILD_DEP_DEB_DIR
    local BUILD_DEP_DEB_CONTROL
    local DEPENDS
    local CONFLICTS
    echo " -> Attempting to satisfy build-dependencies"
    DEPENDS="$(get_build_deps | filter_arch_deps "$ARCH")"
    if [ -n "$CROSSARCH" ]; then
        if [ -z "$DEPENDS" ]; then 
            DEPENDS="libc-dev-$CROSSARCH-cross"
        else
            DEPENDS="$DEPENDS, libc-dev-$CROSSARCH-cross"
        fi
    fi
    CONFLICTS="$(get_build_conflicts | filter_arch_deps "$ARCH")"
    echo " -> Creating pbuilder-satisfydepends-dummy package"
    BUILD_DEP_DEB_DIR="/tmp/satisfydepends-aptitude"
    BUILD_DEP_DEB_CONTROL="$BUILD_DEP_DEB_DIR/pbuilder-satisfydepends-dummy/DEBIAN/control"
    $CHROOTEXEC mkdir -p "$BUILD_DEP_DEB_DIR/pbuilder-satisfydepends-dummy/DEBIAN/"
    $CHROOTEXEC sh -c "cat >\"$BUILD_DEP_DEB_CONTROL\"" <<EOF
Package: pbuilder-satisfydepends-dummy
Version: 0.invalid.0
Architecture: $ARCH
Maintainer: Debian Pbuilder Team <pbuilder-maint@lists.alioth.debian.org>
Description: Dummy package to satisfy dependencies with aptitude - created by pbuilder
 This package was created automatically by pbuilder to satisfy the
 build-dependencies of the package being currently built.
EOF
    if [ -n "$DEPENDS" ]; then
        $CHROOTEXEC sh -c "echo \"Depends: $DEPENDS\" >>\"$BUILD_DEP_DEB_CONTROL\""
    fi
    if [ -n "$CONFLICTS" ]; then
        $CHROOTEXEC sh -c "echo \"Conflicts: $CONFLICTS\" >>\"$BUILD_DEP_DEB_CONTROL\""
    fi
    $CHROOTEXEC sh -c "cat \"$BUILD_DEP_DEB_CONTROL\""
    $CHROOTEXEC sh -c "dpkg-deb -b \"$BUILD_DEP_DEB_DIR/pbuilder-satisfydepends-dummy\""
    $CHROOTEXEC dpkg --force-depends --force-conflicts -i "$BUILD_DEP_DEB_DIR/pbuilder-satisfydepends-dummy.deb" || true
    $CHROOTEXEC aptitude -y --without-recommends -o APT::Install-Recommends=false "${PBUILDER_APTITUDE_CHECK_OPTS[@]}" -o Aptitude::ProblemResolver::StepScore=100 -o "Aptitude::ProblemResolver::Hints::KeepDummy=reject pbuilder-satisfydepends-dummy :UNINST" -o Aptitude::ProblemResolver::Keep-All-Level=55000 -o Aptitude::ProblemResolver::Remove-Essential-Level=maximum install pbuilder-satisfydepends-dummy
    # check whether the aptitude's resolver kept the package
    if ! $CHROOTEXEC dpkg -l pbuilder-satisfydepends-dummy 2>/dev/null | grep -q ^ii; then
        echo "Aptitude couldn't satisfy the build dependencies"
        exit 1
    fi
    echo " -> Finished parsing the build-deps"
}


function print_help () {
    # print out help message
    cat <<EOF
pbuilder-satisfydepends -- satisfy dependencies
Copyright 2002-2007  Junichi Uekawa <dancer@debian.org>

--help:        give help
--control:     specify control file (debian/control, *.dsc)
--chroot:      operate inside chroot
--binary-all:  include binary-all
--binary-arch: include binary-arch only
--echo:        echo mode, do nothing. (--force-version required for most operation)
--force-version: skip version check.
--continue-fail: continue even when failed.

EOF
}

. "$PBUILDER_PKGLIBDIR"/pbuilder-satisfydepends-checkparams

