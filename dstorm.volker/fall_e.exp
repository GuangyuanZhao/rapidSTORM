begin_test_suite
clear_tmp_dir
load_default_config
dstorm_attach

set input_file Mikrotubuli.sif
set test "Fall e) Punkt 2"
send "in Car in Input in MultiChannel in Channels in Channel1 in InputMethod in FileMethod in FileType value set AndorSIF\n"
set test "Fall e) Punkt 3"
set_input_file "${workspace_target}$input_file"
send "in Car in Input in OutputBasename set Basename value set ${tmpdir_target}Mikrotubuli\n"
set test "Fall e) Punkt 4"
send "in Car in Output in EngineOutput in Output2 in Cache in Output0 in Expression in Output1 in Table in ToFile in value set ${tmpdir_target}other.txt\n"
send "in Car in Output in EngineOutput in Output2 in Cache in Output0 in Expression in Output0 in Image in ToFile in value set ${tmpdir_target}other.png\n"
set test "Fall e) Punkt 5"
send "in Car in Output in EngineOutput in ChooseTransmission in value set RawImage\n"
set test "Fall e) Punkt 6"
send "in Car in Output in EngineOutput in ChooseTransmission in value set Image\n"
send "in Car in Output in EngineOutput in Output4 in Image in ToFile in value set ${tmpdir_target}yetanother.jpg\n"
send "in Car in Output in EngineOutput in Output2 in Cache in Output0 in Expression in ChooseTransmission in value set Table\n"
set test "Fall e) Punkt 7"
send "in Car in Output in EngineOutput in Output2 in Cache in Output0 in Expression in Output2 in Table in RemoveOutput in value set 1\n"
set test "Fall e) Punkt 8"
send "in Car in Run in value set 1\n"

set timeout 60
set test "Job finishes for Fall e)"
expect {
    -re "in Progress in value set 0" { exp_continue }
    -re "in LocalizationCount in value set" { exp_continue }
    -re "Changing window" { exp_continue }
    -re "remove dStormJob" { pass "$test" }
}

sleep 1

foreach file [list "other.txt"] {
    set test "Output file $file exists"
    if { [ file exists "${tmpdir_host}$file" ] } {
        pass "$test"
    } else {
        fail "$test"
    }

    set test "Output file $file has over 100 lines"

    if { [ file exists "${tmpdir_host}$file" ] } {
        set linecount 0
        set filestream [open "${tmpdir_host}$file" r]
        while {[gets $filestream line] >= 0} {
            if { [string index $line 0] != "#" } { incr linecount }
        }
        close $filestream
        if { $linecount > 100 } {
            pass "$test"
        } else {
            fail "$test"
        }
    } else {
        fail "$test"
    }
}

set test "Output JPG image exists"
wait_for_file "${tmpdir_host}other.png"
pass_if [ file exists "${tmpdir_host}other.png" ] "$test"
wait_for_file "${tmpdir_host}yetanother.jpg"
pass_if [file exists "${tmpdir_host}yetanother.jpg" ] "Second output JPG image exists"
set test "Output JPG image 2 does not exist"
if { [ file exists "${tmpdir_host}Mikrotubuli.png" ] } {
    fail "$test"
} else {
    pass "$test"
}
pass_if [ file exists "${tmpdir_host}Mikrotubuli.tif" ] "Output TIF image exists"

end_test_suite
