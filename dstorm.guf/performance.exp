begin_test_suite


set_input_file "${workspace_target}Mikrotubuli.sif"
send "in Car in Engine in rapidSTORM in GuessAmplitudeThreshold in value set false\n"
send "in Car in Engine in rapidSTORM in AmplitudeThreshold in value set 3000\n"
send "in Car in Engine in rapidSTORM in SpotFittingMethod in GUF in FitWindowSize in value set 485\n"
send "in Car set Engine in rapidSTORM in SpotFindingMethod in Average in SmoothingMaskSize in value set 7\n"
send "in Car in Input in Optics in InputLayer0 in ThreeD in No3D in PSF in value set 380.0,380.0\n"
send "in Car in Input in Optics in InputLayer0 in PixelSizeInNM in value set 85,85\n"
send "in Car in Output in EngineOutput in ChooseTransmission in value set Count\n"

dstorm_attach

proc measure_performance { name expected_time } {
    global test_performance
    # Perform the tests in this file only on request
    if { [string compare $test_performance "yes"] == 0 } {
        set tick 0 
        send "resource_usage\n"
        expect -re "Current CPU time: (.*)\r*\n" { set tick $expect_out(1,string); }

        set test "$name speed is satisfactory"
        send "in Car in Run in value set 1\n"

        set job [get_job_number]
        set count 0

        expect {
            -re "in LocalizationCount in value set (\[0-9\]*)\r*\n" 
                { set count $expect_out(1,string); exp_continue; }
            -re "remove $job" {}
        }

        set tock 0 
        send "resource_usage\n"
        expect -re "Current CPU time: (.*)\r*\n" { set tock $expect_out(1,string); }

        pass_if [expr [expr $tock - $tick] < $expected_time] "$test"
        pass_if [expr $count > 434000 && $count < 435000] "$name finds correct number of localizations"
    } else {
        untested "$name speed is satisfactory"
        untested "$name finds correct number of localizations"
    }
}

measure_performance "Double-precision LSQ" 43.0

send "in Car set Engine in rapidSTORM set SpotFittingMethod in GUF set MLEFitting in value set true\n"
send "in Car in Input in Optics in InputLayer0 set CountsPerPhoton value set 8\n"
send "in Car in Input in Optics in InputLayer0 set DarkCurrent value set 1000\n"
measure_performance "Double-precision MLE" 136.5

send "in Car set Engine in rapidSTORM set SpotFittingMethod in GUF set DoublePrecision in value set false\n"
measure_performance "Single-precision MLE" 85.0

end_test_suite
