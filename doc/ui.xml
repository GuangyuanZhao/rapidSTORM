<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE chapter 
[<!ENTITY % isogrk1 PUBLIC "ISO 8879:1986//ENTITIES Greek Letters//EN//XML"
                    "http://www.oasis-open.org/docbook/xmlcharent/0.3/iso-grk1.ent">
 <!ENTITY % isopub PUBLIC "ISO 8879:1986//ENTITIES Publishing//EN//XML"
                    "http://www.oasis-open.org/docbook/xmlcharent/0.3/iso-pub.ent">
%isogrk1;
%isopub;
]>


<chapter xmlns='http://docbook.org/ns/docbook' id="UI" xml:lang="en" xmlns:et="http://super-resolution.de/elemtable">
   <title>User interface</title>

    <para>rapidSTORM's user interface is based on a single window (the main window)
        with multiple tabs. Each tab represents either a job configuration or a 
        running job. When rapidSTORM is started, a single job configuration for a
        localization job is opened by default.</para>
    <para>Jobs can be started by clicking the <guilabel>Run</guilabel> button at the
        bottom of a job configuration. Further job configurations can be found in the
        <guimenu>Job</guimenu> menu.</para>
    <para>This chapter will first exemplify basic usage and the process of opening jobs in
        a tutorial. Then, the general behaviour of input elements and the different kinds
        of job configurations will be explained.</para>

<section>
    <title>Basic use tutorial</title>
    <task id="tutorial_start">
        <title>Start an evaluation</title>
        <taskprerequisites>
            This tutorial will exemplify basic rapidSTORM usage by showing
            how to convert an Andor SIF acquisition to a super-resoluted image
            with rapidSTORM. We will load an Andor SIF file, characterize the
            optics by giving a pixel size and the PSF full width at half maximum,
            give a target image resolution and start an evaluation.
        </taskprerequisites>
        <procedure>
            <step>Start rapidSTORM via the icon in the Start menu</step>
            <step>Select the input file by dragging &amp; dropping it from a
                Windows Explorer window to the <et:elemref linkend="InputFile"/>
                field (<xref linkend="example-screenshot.input-file"/>.</step>
            <step>Set the input pixel size by entering the value in the <xref linkend="PixelSizeInNM"/>
            field (<xref linkend="example-screenshot.pixel-size"/>).</step>
            <step>Enter the full width at half maximum of your point spread function into
                the <et:elemref linkend="PSF"/> field (<xref linkend="example-screenshot.psf-fwhm"/>. You can estimate this value from
                the numerical aperture of your microscope by the approximation <inlineequation>
                    <mathphrase>&lgr; / 2 NA</mathphrase></inlineequation>, where &lgr; is
                    the detection wavelength and NA the numerical aperture of your objective.</step>
            <step>Show the options of the image display output by clicking on it 
                  (<xref linkend="example-screenshot.image-display"/>) in the output option tree.</step>
            <step>Optionally change the resolution of the result image by changing the resolution
                fields (<xref linkend="example-screenshot.resolution-x"/>).</step>
            <step>Start the computation by clicking the <guilabel>Run</guilabel> button (<xref linkend="example-screenshot.run"/>).</step>
        </procedure>
        <taskrelated>
            <informalfigure  id="basic_window_screenshot">
                <screenshot>
                    <mediaobject>
                        <imageobjectco>
                            <areaspec>
                                <area id="example-screenshot.input-file" coords="300,300 400,400"/>
                                <area id="example-screenshot.pixel-size" coords="300 400"/>
                                <area id="example-screenshot.psf-fwhm" coords="300 400"/>
                                <area id="example-screenshot.image-display" coords="300 400"/>
                                <area id="example-screenshot.resolution-x" coords="300 400"/>
                                <area id="example-screenshot.run" coords="300 400"/>
                            </areaspec>
                            <imageobject>
                                <imagedata fileref="rapidstorm-step-by-step-2.PNG" width="100%"/>
                            </imageobject>
                        </imageobjectco>
                    </mediaobject>
                </screenshot>
            </informalfigure>
            <para>After you finished starting the evaluation, a new tab will appear in the job tab bar,
                  and a new window will be opened. Continue with the next task: <xref linkend="tutorial_jobwindow"/>.</para>
        </taskrelated>
    </task>
    <task id="tutorial_jobwindow">
        <title>Manage an evaluation</title>
        <taskprerequisites>
            This tutorial shows how to interpret the job window and to modify the output image.
            We assume you have started a job, as described in the <xref linkend="tutorial_start"/>
            tutorial.
        </taskprerequisites>
        <procedure>
            <step>Enhance the image contrast by raising the <xref linkend="Viewer_Status_Power"/> value
                to 0.5. Note how the intensity key next to
                the image display window changes.</step>
            <step>Filter out low-intensity localizations by checking the box next to 
                <xref linkend="ExpressionFilter_LowerAmplitudeThreshold"/> and entering a value of
                4500. Filtering out weak localizations reduces background noise and enhances the
                image resolution slightly, but reduces the number of localizations available for
                image construction.</step>
            <step>Change the colour code by changing <xref linkend="Viewer_ColorScheme"/> to 
                <guilabel>Vary hue with coordinate value</guilabel>. The color of the image now
                shows the X coordinate, resulting in a rainbow-coloured image.</step>
            <step>Change the hue-producing coordinate by changing <guilabel>Coordinate to vary hue with</guilabel>
                to <guilabel>emission strength</guilabel>. The colour code would now display the intensity
                of each localization, but stays grey because the range is not set.</step>
            <step>Change the <guilabel>Color range</guilabel> fields at the lower right end of the result
                image window to 5000 and 30000 by entering each value and pressing enter.</step>
            <step>Close the job by pressing <guilabel>Close job</guilabel>. The image window will stay active until
                it is closed.</step>
        </procedure>
    </task>
</section>

<section>
    <title>Behaviour of input fields</title>
    <para>Job configurations consist of a series of input fields and control elements
        that configure the job. Most of them are standard UI tools like buttons and
        checkboxes, and we assume you are familiar with their use. However, there are
        a number of specialities, and we will introduce them in this section.</para>
    <section>
        <title>Immediate effects and committing values</title>
        <para>The visibility of many input fields in rapidSTORM is dependent on 
            previous choices, i.e. the value of fields that are displayed above the
            current field. Therefore, changes in text fields are not immediately committed
            while you type. While a field is not committed, its values do not take effect, and
            its background is red. You can commit a textfield by pressing Enter or switching the
            keyboard focus away from the field, e.g. with the Tab key or clicking another field.</para>
        <para></para>
    </section>
    <section>
        <title>Multi-dimensional chaining</title>
        <para>Text fields in rapidSTORM are often part of a matrix. You can
            recognize matrices by the presence of multiple text fields with
            one description. Next to a matrix field, a button with a chain is
            shown.</para>
        <para>The chain button is used to "chain" the matrix elements, that is
            to change all elements at once (chained) or individually (unchained).
            When text fields are chained, entering text in one of the fields 
            immediately changes the text in all fields. When text fields are unchained,
            each field is changed and committed individually. Leading unchained text fields
            in a matrix do not commit their values when they lose focus; only the last
            text field in the matrix behaves in this way.</para>
    </section>
    <section>
        <title>Optional values</title>
        <para>Some values in rapidSTORM are optional, that is, they can have no value at
            all. These fields have a checkbox in front of them. The checkbox controls the
            presence of a value, and the text field is not displayed while the checkbox is
            not checked. When you check the checkbox, the text field will be uncommitted
            and has to be committed in the usual way to take effect.</para>
    </section>

    <section>
        <title>Selecting input files</title>
        <para>When a text field in rapidSTORM requires a file name, you can enter the
            file name directly, select it interactively with a dialog by clicking the
            Select button next to the field, or by dragging &amp; dropping the file on
            the input field.</para>
    </section>

    <section>
        <title>The output options tree</title>
        <para>Localization jobs and replay jobs organize their output in an output options
            tree. This tree is displayed with a tree element on the left, which shows the structure
            of the tree and allows selecting a single node, and the node detail field, which
            shows the detailed options for the tree node selected on the left-hand side.</para>
        <para>Each node in the output tree represents an output module, which will perform some
            action with or display information about the output. Some of the output modules
            such as the <xref linkend="ExpressionFilter"/> modify their input and can have 
            subordinate output modules. The subordinate output modules will act on the localizations
            that were modified by their parent output modules.</para>
        <para>The first, root node (called "dSTORM engine output")
            symbolizes the output of the <xref linkend="dSTORM_engine"/>.
            Each module connected to it receives all localizations found by
            the engine without filtering or processing.</para>
        <para>For an example, consider
             the tree shown in the graphic: 
             The first <guilabel>Localizations file</guilabel>, <guilabel>Count localizations</guilabel>,
             <guilabel>Display progress</guilabel>, <guilabel>Filter localizations</guilabel> and <guilabel>Average images</guilabel>
             receive the unmodified output from the 
             <xref linkend="dSTORM_engine"/>. The
             localizations received by the second <guilabel>Localizations file</guilabel> and for
             <guilabel>Image display</guilabel> are those modified by the <guilabel>Filter localizations</guilabel>
             module.</para>
          <para>Clicking on an output module in the tree view shows this
             module's configuration in the right part of the display. Each 
             module has specific configuration options, which are documented
             together with the module's description in the <xref linkend="output_modules"/> chapter.
             You can manage the suboutputs by the following standard control elements:</para>
          <et:elemtable> 
            <title>Output configuration items</title>
            <et:elem desc="Choose new output" topic="ChooseOutput">
                <para>This button opens a dialog for choosing new output modules.</para>
            </et:elem>
            <et:elem desc="Remove output" topic="RemoveOutput">
                <para>The current output module and all its children are removed from the output tree.</para>
            </et:elem>
          </et:elemtable>
      </section>
</section>

<section>
    <title>The menu bar</title>
    <section>
        <title>Job</title>
        <para>The job menu is used to open and save job configurations.</para>
        <para>You can open new jobs by selecting any of the template entries in
            one of the submenus. The submenu selects the type of the new job configuration,
            e.g. <guilabel>Localization</guilabel> for localizing fluorophores in images,
            <guilabel>Replay</guilabel> for reading a localizations file, or
            <guilabel>Alignment fitter</guilabel> for fitting a linear alignment
            matrix to two localization files.</para>
        <para>You can save the configuration of the current job tab by clicking on <guilabel>Save ...</guilabel>.
            You can open a saven configuration by using the <guilabel>From file ...</guilabel>
            menu item in the submenu with the same job type (e.g. <guilabel>Localization</guilabel>
            for a saved localization config).</para>
    </section>

    <section id="expertise_level">
        <title>User level</title>
        <para>The user level menu is used to limit the number of available input fields.
            At low user levels, only the most important input fields are displayed.
            You can change the user level by clicking on the appropriate menu entry.</para>
    </section>
    <section>
        <title>Help</title>
        <para>In the help menu, you can interactively open the section of the manual
            that describes a given input item. Click first on the menu item <guilabel>What's this?</guilabel>,
            and then on the input field's label.</para>
    </section>
</section>

<section id="image_window">
    <title>Image window</title>
    <para>When a job is started with the <xref linkend="image_display"/>
        output module active, a window showing an image with the already
        computed localizations is displayed.</para>
    <para>The image display window shows one or two keys on its right side.
        If there is one key, it shows the mapping of intensity values, i.e.
        accumulated emission intensities, to colors. The numbers are suffixed
        with SI unit prefixes, and the unit is displayed at the top of the
        key.</para>
    <para>If the image is hued by coordinate, a second key appears. The left
        key is in black and white and shows the image intensity, while the right key
        shows a color spectrum and displays the values indicated by the colours.
        The two text boxes at the bottom of the right key allow setting the range
        of the hueing. If the right key is completely black, the range is unknown
        and must be entered.</para>
</section>

</chapter>
