PACKAGE_TARNAME:=@PACKAGE_TARNAME@
PACKAGE_VERSION:=@PACKAGE_VERSION@
ISCC:=@ISCC@
STRIP:=@STRIP@
WINE:=@WINE@
PREFIX:=@prefix@

ME:=$(lastword $(MAKEFILE_LIST))
STAGE:=$(dir $(ME))../..
TMP:=build
BUNDLE:=$(PACKAGE_TARNAME)_$(PACKAGE_VERSION)_bin.tgz

GRAPHICSMAGICK_ROOT:=/usr/local/i586-mingw32msvc
GRAPHICSMAGICK_EXPR:=-path '*/GraphicsMagick-1.3.6/config/*' -type f

prefix_binaries.lst:=$(TMP)
prefix_graphicsmagick.lst:=$(GRAPHICSMAGICK_ROOT)
prefix_java.lst:=$(PREFIX)
prefix_helpfiles.lst:=$(PREFIX)
prefix_headers.lst:=$(PREFIX)
prefix_bundle.lst:=$(TMP)
prefix_config_file.lst:=$(PREFIX)

ifneq ($(WINE),)
BUNDLE_LISTS:=binaries.lst helpfiles.lst graphicsmagick.lst headers.lst java.lst
bundle : $(BUNDLE)
include auto.dep
include graphicsmagick.dep
else
LISTS:=bundle.lst config_file.lst
bundle.lst : $(BUNDLE)
	mkdir -p $(TMP); tar xfz $(BUNDLE) -C $(TMP) ; find $(TMP)/ -type f -printf '%P\n' > $@
bundle :
	false
endif

ifneq ($(ISCC),)
installer : dSTORM.exe
dSTORM.exe : dSTORM.iss
	$(ISCC) $<
else
installer :
endif

.DELETE_ON_ERROR :

config_file.lst :
	f=share/$(PACKAGE_TARNAME)/dstorm-config.txt; test -e $(PREFIX)/$$f && echo $$f > $@
java.lst :
	test -e $(PREFIX)/share/java/rapidSTORM.jar && echo share/java/rapidSTORM.jar > $@

graphicsmagick.dep : 
	if test 'x$(GRAPHICSMAGICK_ROOT)' = 'x'; then echo > $@; else \
	find $(GRAPHICSMAGICK_ROOT) $(GRAPHICSMAGICK_EXPR)\
	    -printf 'graphicsmagick : $(STAGE)/%P\n$(STAGE)/%P : %p\n' \
	    > $@; fi

binaries.lst : loaded_DLLs.txt binaries
	sed -e 's§tag \(.*\) \(.*\)§\2§' $< > $@

binaries :
	touch $@

helpfiles.lst : storm.out
	cat $< | tr '\r\t' '  ' | sed -n -e 's§^help_file \([^ ]*\) *§share/doc/\1§p' > $@

graphicsmagick.lst : 
	find $(GRAPHICSMAGICK_ROOT) $(GRAPHICSMAGICK_EXPR) -printf '%P\n' > $@

headers.lst :
	find $(PREFIX)/include/dStorm $(PREFIX)/include/simparm -type f | sed -e 's§^$(PREFIX)/§§'  > $@

$(BUNDLE) : $(BUNDLE_LISTS)
	tar cfz $@ $(foreach list,$(LISTS),-C $(prefix_$(list)) --files-from=$(list))

%.exe :
	mkdir -p $(dir $@)
	$(STRIP) -o $@ $<
%.dll :
	mkdir -p $(dir $@)
	if test $(notdir $<) != "ATMCD32D.DLL"; then $(STRIP) -o $@ $<; else cp $< $@; fi

dSTORM.iss : $(PREFIX)/share/rapidstorm/dSTORM.iss $(LISTS:.lst=.iss)
	cat $^ > $@

%.iss : %.lst
	sed -e 's§\(.*\)/\([^/]*\)§Source: "$(prefix_$<)/\1/\2"; DestDir: "{app}/\1"§' $< > $@

storm.out :
	{ echo "attach"; echo "quit"; } |\
	  WINEDEBUG="loaddll" wine $(PREFIX)/bin/dstorm.exe --Twiddler \
	  > $@ 2>&1

loaded_DLLs.txt : storm.out
	sed -n -e 's§.*Loaded L"Z:\(.*\)" at [0-9a-fA-Fx]*: native.*§\1§p' $< | \
	sed -e 's/\\\\/\//g' | \
	sed -e 's§\(^/.*\)/bin/\([^/]*\)$$§tag \1 bin/\2§' \
	    -e 's§^$(PREFIX)/§tag $(PREFIX) §' > $@
	test `grep -v -c '^tag '  $@` = 0

auto.dep : loaded_DLLs.txt 
	sed -e 's/^tag \(.*\) \(.*\)/storm.out : \1\/\2/' $< > $@
	sed -e 's§^tag \(.*\) \(.*\)§binaries : $(TMP)/\2§' $< >> $@
	sed -e 's§^tag \(.*\) \(.*\)§$(TMP)/\2 : \1/\2§' $< >> $@
