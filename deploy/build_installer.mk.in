PACKAGE_TARNAME:=@PACKAGE_TARNAME@
PACKAGE_VERSION:=@PACKAGE_VERSION@
ISCC:=@ISCC@
STRIP:=@STRIP@
WINE:=@WINE@
PREFIX:=@prefix@
srcdir:=@srcdir@
EXTRA_INSTALLER:=@EXTRA_INSTALLER@

ME:=$(lastword $(MAKEFILE_LIST))
STAGE:=$(dir $(ME))../..
TMP:=build
BUNDLE:=$(PACKAGE_TARNAME)_$(PACKAGE_VERSION)_bin.tgz
INSTALLER:=$(PACKAGE_TARNAME)

GRAPHICSMAGICK_ROOT:=/usr/local/i586-mingw32msvc
GRAPHICSMAGICK_EXPR:=-path '*/GraphicsMagick-1.3.6/config/*' -type f

prefix_binaries.lst:=$(TMP)
flags_binaries.lst:=
components_binaries.lst:=main
prefix_graphicsmagick.lst:=$(GRAPHICSMAGICK_ROOT)
flags_graphicsmagick.lst:=
components_graphicsmagick.lst:=main
prefix_java.lst:=$(PREFIX)
flags_java.lst:=
components_java.lst:=main
prefix_helpfiles.lst:=$(PREFIX)
flags_helpfiles.lst:=
components_helpfiles.lst:=main
prefix_headers.lst:=$(PREFIX)
flags_headers.lst:=
components_headers.lst:=devel
prefix_config_file.lst:=$(PREFIX)
flags_config_file.lst:=
components_config_file.lst:=main

prefix_bundle_iss.lst:=.

all : 

$(INSTALLER).iss : dSTORM.iss
ifneq ($(WINE),)
BUNDLE_LISTS:=binaries.lst helpfiles.lst graphicsmagick.lst headers.lst java.lst
bundle : $(BUNDLE)
include auto.dep
include graphicsmagick.dep

$(BUNDLE) : bundle_iss.lst $(BUNDLE_LISTS)
	tar cfz $@ $(foreach list,bundle_iss.lst $(BUNDLE_LISTS),-C $(prefix_$(list)) --files-from=$(list))

else
$(INSTALLER).iss : $(TMP)/bundle.iss config_file.iss $(EXTRA_INSTALLER)
$(TMP)/bundle.iss : $(BUNDLE)
	mkdir -p $(TMP); tar xfz $(BUNDLE) -C $(TMP) ; touch $@
bundle :
	false
endif

ifneq ($(ISCC),)
installer : $(INSTALLER).exe
$(INSTALLER).exe : $(INSTALLER).iss Readme.txt License.txt inst.bmp
	'$(ISCC)' '$<'
else
installer :
endif

.DELETE_ON_ERROR :

Readme.txt : $(srcdir)/../README
License.txt : $(srcdir)/../LICENSE
inst.bmp : $(srcdir)/inst.bmp

bundle_iss.lst : bundle.iss
	echo $< > $@

bundle.iss : $(BUNDLE_LISTS:.lst=.iss)
	cat $^ | sed -e 's#Source: "[^"]*\(/[^/"]*\)"; DestDir: "\({.*}\)\([^"]*\)"#Source: "$(TMP)\3\1"; DestDir: "\2\3"#'  > $@

config_file.lst :
	f=share/$(PACKAGE_TARNAME)/dstorm-config.txt; test -e $(PREFIX)/$$f && echo $$f > $@
java.lst :
	test -e $(PREFIX)/share/java/rapidSTORM.jar && echo share/java/rapidSTORM.jar > $@

graphicsmagick.dep : 
	if test 'x$(GRAPHICSMAGICK_ROOT)' = 'x'; then echo > $@; else \
	find $(GRAPHICSMAGICK_ROOT) $(GRAPHICSMAGICK_EXPR)\
	    -printf 'graphicsmagick : $(STAGE)/%P\n$(STAGE)/%P : %p\n' \
	    > $@; fi

binaries.lst : loaded_DLLs.txt binaries
	sed -e 's§tag \(.*\) \(.*\)§\2§' $< > $@

binaries :
	touch $@

helpfiles.lst : storm.out
	cat $< | tr '\r\t' '  ' | sed -n -e 's§^help_file \([^ ]*\) *§share/doc/\1§p' > $@

graphicsmagick.lst : 
	find $(GRAPHICSMAGICK_ROOT) $(GRAPHICSMAGICK_EXPR) -printf '%P\n' > $@

headers.lst :
	find $(PREFIX)/include/dStorm $(PREFIX)/include/simparm -type f | sed -e 's§^$(PREFIX)/§§'  > $@

%.exe :
	mkdir -p $(dir $@)
	$(STRIP) -o $@ $<
%.dll :
	mkdir -p $(dir $@)
	if test $(notdir $<) != "ATMCD32D.DLL"; then $(STRIP) -o $@ $<; else cp $< $@; fi
%.txt : 
	cp $< $@
%.bmp : 
	cp $< $@

$(INSTALLER).iss :
	cat $^ > $@

%.iss : %.lst
	{ \
	  echo "[Files]"; \
	  sed -e 's§\(.*\)/\([^/]*\)§Source: "$(prefix_$<)/\1/\2"; DestDir: "{app}/\1"; Components: $(components_$<)$(if $(flags_$<),; Flags: $(flags_$<),)§' $<; \
	} > $@

storm.out :
	{ echo "attach"; echo "quit"; } |\
	  WINEDEBUG="loaddll" wine $(PREFIX)/bin/dstorm.exe --Twiddler \
	  > $@ 2>&1

loaded_DLLs.txt : storm.out
	sed -n -e 's§.*Loaded L"Z:\(.*\)" at [0-9a-fA-Fx]*: native.*§\1§p' $< | \
	sed -e 's/\\\\/\//g' | \
	sed -e 's§\(^/.*\)/bin/\([^/]*\)$$§tag \1 bin/\2§' \
	    -e 's§^$(PREFIX)/§tag $(PREFIX) §' > $@
	test `grep -v -c '^tag '  $@` = 0

auto.dep : loaded_DLLs.txt 
	sed -e 's/^tag \(.*\) \(.*\)/storm.out : \1\/\2/' $< > $@
	sed -e 's§^tag \(.*\) \(.*\)§binaries : $(TMP)/\2§' $< >> $@
	sed -e 's§^tag \(.*\) \(.*\)§$(TMP)/\2 : \1/\2§' $< >> $@
